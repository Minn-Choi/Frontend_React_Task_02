export let dummy_data = [
  {
    postID: 1,
    title: "1차세션",
    content: "오늘은 즐거운 세션을 했어요.",
    thumbnail:
      "https://blog.kakaocdn.net/dn/cIWgr0/btrzdqsa7dC/SH7KmqR8NuO06ArVQIlR81/img.jpg",
    createdAt: "2024-07-12 01:02:03",
    photo: "https://blog.kakaocdn.net/dn/cIWgr0/btrzdqsa7dC/SH7KmqR8NuO06ArVQIlR81/img.jpg",
    writer: "미미니",
    main: "들어가며 안녕하세요. 프론트엔드 개발자 Lennon입니다.\n\n최근에 토스 유튜브 영상: 가독성 좋은 코드란 무엇일까? 에서 프론트엔드 리드 세 분께서 이야기하는 걸 보았는데, 신입 및 주니어가 가장 많이 하는 실수가 빠르게 만드는 거라고 하더라구요. 아키텍처 및 코드 품질이 아쉬울 확률이 크다고.. 저를 보는 것 같더라구요. 🥲\n스트리밍 리팩토링 단어도 재밌었습니다. 한 번 봐보셔도 좋을 것 같아요.\n\n프론트엔드를 포함해 현업 개발자라면 사내에서 사내 제품 개발을 꾸준히 진행하실 것 같은데요,\n저도 2년 동안 두 곳의 회사에서 개발을 진행하며 정말 다양한 기능에 대해 아키텍쳐 설계부터 코드 레벨 구현까지 정말 많은 기능들을 개발해온 것 같아요.\n\n요즘엔 무턱대고 개발을 진행하는 것보단 주어진 기능에 대해 아키텍처, 구현, 성능 개선, 리팩토링을 포함해 비즈니스적인 데드라인도 함께 고려해서 개발을 진행하려 노력하고 있습니다.\n데드라인과 각각의 과정들의 일정을 산출하는 건 항상 어려운 것 같아요. 그만큼 설계의 중요성을 많이 깨닫고 있어요.\n\n해당 글에선 최근 사내 제품 개발에서 웹 빌더와 관련해 데이터 구조부터 아키텍쳐 설계, 설계에 따른 리액트 로직을 구현한 경험에 대해 이야기해 보려고 합니다.\n\n만약 글을 읽으셨고, 조금 더 좋은 접근법이 떠오르신다면 댓글 써주시면 감사드리겠습니다 🙂\n\n해당 글은 특정 기능을 함께 구현하는 게 아니니 소스코드 일부만 공개하는 점 양해 부탁드립니다.\n데이터 구조 설계\n\n웹 빌더 개발에 대한 요구사항이 왔다고 생각해 봅시다.\n\n각각의 Section들이 있고, 각 Section들은 Section, Flex, Text, Image, Button 요소들이 함께하고 있다고 가정하겠습니다. 아래처럼요.",
  },

  {
    postID: 2,
    title: "2차세션",
    content: "오늘은 리엑트를 배웠어요^^ 아~ 재밌다",
    thumbnail:
      "https://flexible.img.hani.co.kr/flexible/normal/960/960/imgdb/resize/2019/0121/00501111_20190121.JPG",
    createdAt: "2024-07-13 01:02:03",
    photo: "https://blog.kakaocdn.net/dn/cIWgr0/btrzdqsa7dC/SH7KmqR8NuO06ArVQIlR81/img.jpg",
    writer: "마마니",
    main: "오늘도 안녕하세요. 프론트엔드 개발자 Lennon입니다.\n\n최근에 토스 유튜브 영상: 가독성 좋은 코드란 무엇일까? 에서 프론트엔드 리드 세 분께서 이야기하는 걸 보았는데, 신입 및 주니어가 가장 많이 하는 실수가 빠르게 만드는 거라고 하더라구요. 아키텍처 및 코드 품질이 아쉬울 확률이 크다고.. 저를 보는 것 같더라구요. 🥲\n스트리밍 리팩토링 단어도 재밌었습니다. 한 번 봐보셔도 좋을 것 같아요.\n\n프론트엔드를 포함해 현업 개발자라면 사내에서 사내 제품 개발을 꾸준히 진행하실 것 같은데요,\n저도 2년 동안 두 곳의 회사에서 개발을 진행하며 정말 다양한 기능에 대해 아키텍쳐 설계부터 코드 레벨 구현까지 정말 많은 기능들을 개발해온 것 같아요.\n\n요즘엔 무턱대고 개발을 진행하는 것보단 주어진 기능에 대해 아키텍처, 구현, 성능 개선, 리팩토링을 포함해 비즈니스적인 데드라인도 함께 고려해서 개발을 진행하려 노력하고 있습니다.\n데드라인과 각각의 과정들의 일정을 산출하는 건 항상 어려운 것 같아요. 그만큼 설계의 중요성을 많이 깨닫고 있어요.\n\n해당 글에선 최근 사내 제품 개발에서 웹 빌더와 관련해 데이터 구조부터 아키텍쳐 설계, 설계에 따른 리액트 로직을 구현한 경험에 대해 이야기해 보려고 합니다.\n\n만약 글을 읽으셨고, 조금 더 좋은 접근법이 떠오르신다면 댓글 써주시면 감사드리겠습니다 🙂\n\n해당 글은 특정 기능을 함께 구현하는 게 아니니 소스코드 일부만 공개하는 점 양해 부탁드립니다.\n데이터 구조 설계\n\n웹 빌더 개발에 대한 요구사항이 왔다고 생각해 봅시다.\n\n각각의 Section들이 있고, 각 Section들은 Section, Flex, Text, Image, Button 요소들이 함께하고 있다고 가정하겠습니다. 아래처럼요.",
  },
  
  {
    postID: 3,
    title: "3차세션",
    content:
      "오늘은 리엑트를 배웠어요^^ 너무 너무 재밌다, 라우터도 스타일드 컴포넌트도 배웠어요.",
    thumbnail:
      "https://dimg.donga.com/wps/NEWS/IMAGE/2022/01/28/111500268.2.jpg",
    createdAt: "2024-07-14 01:02:03",
    photo: "https://blog.kakaocdn.net/dn/cIWgr0/btrzdqsa7dC/SH7KmqR8NuO06ArVQIlR81/img.jpg",
    writer: "모모모",
    main: "여러분 안녕하세요. 프론트엔드 개발자 Lennon입니다.\n\n최근에 토스 유튜브 영상: 가독성 좋은 코드란 무엇일까? 에서 프론트엔드 리드 세 분께서 이야기하는 걸 보았는데, 신입 및 주니어가 가장 많이 하는 실수가 빠르게 만드는 거라고 하더라구요. 아키텍처 및 코드 품질이 아쉬울 확률이 크다고.. 저를 보는 것 같더라구요. 🥲\n스트리밍 리팩토링 단어도 재밌었습니다. 한 번 봐보셔도 좋을 것 같아요.\n\n프론트엔드를 포함해 현업 개발자라면 사내에서 사내 제품 개발을 꾸준히 진행하실 것 같은데요,\n저도 2년 동안 두 곳의 회사에서 개발을 진행하며 정말 다양한 기능에 대해 아키텍쳐 설계부터 코드 레벨 구현까지 정말 많은 기능들을 개발해온 것 같아요.\n\n요즘엔 무턱대고 개발을 진행하는 것보단 주어진 기능에 대해 아키텍처, 구현, 성능 개선, 리팩토링을 포함해 비즈니스적인 데드라인도 함께 고려해서 개발을 진행하려 노력하고 있습니다.\n데드라인과 각각의 과정들의 일정을 산출하는 건 항상 어려운 것 같아요. 그만큼 설계의 중요성을 많이 깨닫고 있어요.\n\n해당 글에선 최근 사내 제품 개발에서 웹 빌더와 관련해 데이터 구조부터 아키텍쳐 설계, 설계에 따른 리액트 로직을 구현한 경험에 대해 이야기해 보려고 합니다.\n\n만약 글을 읽으셨고, 조금 더 좋은 접근법이 떠오르신다면 댓글 써주시면 감사드리겠습니다 🙂\n\n해당 글은 특정 기능을 함께 구현하는 게 아니니 소스코드 일부만 공개하는 점 양해 부탁드립니다.\n데이터 구조 설계\n\n웹 빌더 개발에 대한 요구사항이 왔다고 생각해 봅시다.\n\n각각의 Section들이 있고, 각 Section들은 Section, Flex, Text, Image, Button 요소들이 함께하고 있다고 가정하겠습니다. 아래처럼요.",
  },
];
